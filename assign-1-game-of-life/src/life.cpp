/**
 * File: life.cpp
 * --------------
 * Implements the Game of Life.
 */

#include <iostream>  // for cout
using namespace std;

#include "console.h" // required of all files that contain the main function
#include "simpio.h"  // for getLine
#include "gevent.h" // for mouse event detection
#include "strlib.h"
#include <fstream>
#include <iostream>
#include <cstdlib>
#include <ctime>
#include "life-constants.h"  // for kMaxAge
#include "life-graphics.h" // for class LifeDisplay
#include "gtimer.h"

static void welcome();
void select();
void draw(LifeDisplay &dispaly);
int getms();
void dian(LifeDisplay &dispaly);
void run(LifeDisplay &dispaly);
void next(LifeDisplay &dispaly);
void print100();
bool check();
int getne(int x,int y);

int row,col;
vector<Grid<int>> pic;
int now = 0;
int wok,ms;
bool exit_game = false;
int dx[8] = {1,1,1,0,0,-1,-1,-1};
int dy[8] = {1,-1,0,1,-1,1,-1,0};


int main() {
    LifeDisplay display;
    srand(time(0));
    display.setTitle("Game of Life");
    do{
        now = 0;
        pic.clear();
        exit_game = false;
        ms = 0;
        welcome();select();
        display.setDimensions(row,col);
        draw(display);
        ms = getms();
        if(ms == 0){
            dian(display);
        }else{
            run(display);
        }
    }while(!exit_game);
    return 0;
}

static void welcome() {
    cout << "欢迎来到“生命”游戏，这是一个模拟细菌群落生命周期的游戏。" << endl;
    cout << "细胞的生存和死亡遵循以下规则：" << endl << endl;
    cout << "\t一个邻居为1或更少的小区死于孤独" << endl;
    cout << "\t有2个邻居的位置不变" << endl;
    cout << "\t有3个邻居的地点将自发诞生" << endl;
    cout << "\t有4个或4个以上邻居的场所因过度拥挤而死亡" << endl << endl;
    cout << "在动画中，新细胞是深色的，并随着年龄的增长而逐渐变灰。" << endl << endl;
    getLine("Hit [enter] to continue....   ");
    cout << "\n";
}

void draw(LifeDisplay &dispaly){
    row = pic[now].numRows();
    col = pic[now].numCols();
    for(int i = 0; i < row; i++){
        for(int j = 0; j < col; j++){
            dispaly.drawCellAt(i,j,pic[now][i][j]);
        }
    }
    dispaly.repaint();

}

void dian(LifeDisplay &dispaly){
    char c;
    cout << "点Enter进行下一步，q可以退出" << endl;
    while(true){
        c = std::cin.get();
        if(c == '\n'){
            GEvent event = waitForEvent(KEY_EVENT);
            if (event.getEventClass() == KEY_EVENT){
                next(dispaly);
                draw(dispaly);
                if(check()){
                    cout << "已经结束了" << endl;
                    break;
                }
            }
        }else if(c == 'q'){
            cout << "游戏结束" << endl;
            break;
        }
    }
}

void run(LifeDisplay &dispaly){
    cout << "自动模式" << endl;
    GTimer time(ms);
    time.start();
    while(true){
        GEvent event = waitForEvent(TIMER_EVENT + MOUSE_EVENT + KEY_EVENT);
        if (event.getEventClass() == TIMER_EVENT ||
            event.getEventClass() == KEY_EVENT){
            next(dispaly);
            draw(dispaly);
            if(check()){
                cout << "已经结束了" << endl;
                break;
            }
        }else if(event.getEventType() == MOUSE_PRESSED){
            cout << "鼠标点击弹出" << endl;
            break;
        }
    }
    time.stop();
}

void next(LifeDisplay &dispaly){
    int next = now ^ 1;
    int ne;
    for(int i = 0; i < row; i++){
        for(int j = 0; j < col; j++){
            ne = getne(i,j);
            if(ne == 1 || ne == 0){
                pic[next][i][j] = 0;
            }else if(ne == 2){
                if(pic[now][i][j] != 0){
                    pic[next][i][j] = pic[now][i][j] + 1;
                    if(pic[next][i][j] > kMaxAge) pic[next][i][j] = 0;
                }else {
                    pic[next][i][j] = 0;
                    if(pic[next][i][j] > kMaxAge) pic[next][i][j] = 0;
                }
            }else if(ne == 3){
                pic[next][i][j] = pic[now][i][j] + 1;
            }else if(ne >= 4){
                pic[next][i][j] = 0;
            }
        }
    }
    now = next;
}

bool check(){
    int before = now ^ 1;
    for(int i = 0; i < row; i++){
        for(int j = 0; j < col; j++){
            if(pic[now][i][j] != pic[before][i][j]){
                if(pic[now][i][j] + pic[before][i][j] == 1){
                    return false;
                }
                if(abs(pic[now][i][j] - pic[before][i][j]) != 1){
                    return false;
                }
            }
        }
    }
    return true;
}

int getne(int x,int y){
    int sum = 0;
    for(int i = 0; i <= 7; i++){
        int xx = x + dx[i];
        int yy = y + dy[i];
        if(xx >= row || xx < 0 || yy >= col || yy < 0) continue;
        if(pic[now][xx][yy] != 0) sum++;
    }
    return sum;
}

int getms(){
    int choice;
    cout << "你可以选择4种迭代速度" << endl;
    cout << "1 = 非常快" << endl;
    cout << "2 = 一般快" << endl;
    cout << "3 = 慢" << endl;
    cout << "4 = 手动迭代" << endl;
    cin >> choice;
    while(choice != 1 && choice != 2 && choice != 3 && choice != 4){
        cout << "请输入1,2,3,4" << endl;
        cin >> choice;
    }
    if(choice == 1) return 500;
    else if(choice == 2) return 1000;
    else if(choice == 3) return 1500;
    else return 0;
}

void select(){
    cout << "我们有两种选择方式，我们可以选择用文档中提供好的配置启动,也可以用随机生成" << endl;
    cout <<"你是否要随机生成(yes/no)" << endl;
    string check;cin >> check;
    while(check != "yes" && check != "no"){
        cout << "请输入yes或no";
        cin >> check;
    }
    Grid<int> be,af;
    if(check == "yes"){
        row = rand() % 21 + 40;
        col = rand() % 21 + 40;
        be.resize(row,col);
        af.resize(row,col);
        for(int i = 0; i < row; i++){
            for(int j = 0; j < col; j++){
                if(rand() % 2 == 1){
                    be[i][j] = rand()%(kMaxAge+1);
                }
            }
        }
        pic.push_back(be);
        pic.push_back(af);
    }else{
        ifstream my_file;
        cout << "请输入要读取的文件名称" << endl;
        string file;cin >> file;
        my_file.open("res/files/" + file);
        while(!my_file){
            cout << "文件不存在，请重新输入" << endl;
            cin >> file;
            my_file.open("res/files/" + file);
        }
        string line;
        while(getline(my_file,line)){
            if(line[0] != '#'){
                row = stoi(line);
                getline(my_file,line);
                col = stoi(line);
                break;
            }
        }
        be.resize(row,col);
        af.resize(row,col);
        int roww = 0;
        while(getline(my_file,line)){
            for(int i = 0; i < col; i++){
                if(line[i] != '-'){
                    be[roww][i] = 1;
                }else{
                    be[roww][i] = 0;
                }
            }
            roww++;
        }
        pic.push_back(be);
        pic.push_back(af);
    }
}

void print100(){
    cout << "\n";
    cout << "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[[..                     .,[\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/[                                      ,\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/...            .,]]]/O@@OO@@\]]`..             ..[\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/..O@.       ,]O@@@@@@@@@@@@@@@@@@@@@@@@@[[[O]`.          .[O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[.     ..  ]@@@@@@@@@O[[,,\@@@@@@@@@@@@`          ,@@@\`         ,\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@/         ]@@@@@@@@@/.         ,@@@@@@@@.    .`.       \@@@@@\`        ,O@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@/`       .`.   \@@@@@@`    ,]]]    .O@@@@@     /@@@@@\    /@@@@@@@@O`      .\@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@[       ,/.      =@@@@@    .@@@@@^    .@@@@     @@@@@@@@@.    @@@@@@@^         ,@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@`       /`        .@@@@^    ,@@@@@@@`   .@@@`    =@@@@@@@@@^    =@@@@@@^           ,O@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@`      ,/@^         O@@@O    ,@@@@@@@@.   .@@@    .@@@@@@@@@@`    =@@@@@@@`             .[@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@/      ,@@@@@@]^     /@@@@.    O@@@@@@@/    =@@@    =@@@@@@@@@^     @@@@@@@@@\.     .        =@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@      ,@@@@@@@@@     =@@@@@    =@@@@@@@@.   .@@@@   ..@@@@@@@@`     @@@@@@@`       .O@@@^      .[\@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@^      /@@@@@@@@@     .@@@@@^    =@@@@@@@O`   @@@@@\   \`,@@@[.      @@@@@@/          ./[^          =@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@`   .]@@@@@@@@@@@`     @@@@@@^    =@@@@/`    ,@@@@@@@\              /@@@@@@@@`..                      \@@@@@@@@@@@\n"
            "@@@@@@@@@@@/.    O@@@@@@@@@@@^     O@@@@@@@      [.      ,@@@@@@@@@@\.        ,O@@@@@@@@@@`       `                 =@@@@@@@@@@\n"
            "@@@@@@@@@@/    .@@@@@@@@@@@@/   ,O@@@@@@@@@@           ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@         @@@@\     ,@@@@@@@@@\n"
            "@@@@@@@@@/    =@@@@@@@@@@@@@     =@@@@@@@@@@@\`     ,/@@@@@@@@@@@@@@/`@@@@@@@@@@@@@@@@@@@@@@@@@@@@.       .@@@@@\     ,@@@@@@@@\n"
            "@@@@@@@@/    .@@@@@@@@@@@@@     .@@@@@@@@@@@@@@@@@@@@@[[...     ./@@@@O[[.         ...,[[\@@@@@@@@\      ,@@@@@@@@     ,@@@@@@@\n"
            "@@@@@@@O    .O@@@@@@@@@@@@@     @@@@@@@@@@@@O[`          ,]/@@@O[       .]]/@@@@@@@@@\@\]]@/. ..[[@@O@@@@@@@@@@@@@@     ,@@@@@@\n"
            "@@@@@@@     =@@@@@@@@@@@@@@@\]/@@@@@@/[.           ,/@@@@@/[     ]/@@@@@@@@@@@@@@@@/  \@@@@@@@@@\]   ,\@@@@@@@@@@@@\     =@@@@@\n"
            "@@@@@@`     @@@@@@@@@@@@@@@@@@@/`           ,]@@@@@@@@/.   ./@@@@@@@@@@@@@@@@@@@@@`  =@@@@@@@@@@@@@@@].  ,\@@@@@@@@@^     @@@@@\n"
            "@@@@@^     /@@@@@@@@@@@@@@[          ,]/@@@@@@@@@/[    ]O@@@@@@@@@@@@@@@@@@@@@@@`    @@@@@@@@@@@@@@@@@@@\`  .\@@@@@@@.    .@@@@\n"
            "@@@@@     =@@@@@@@@@@/`        ,/@@@@@@@@@@@@[`   ,/@@@@@@@@@@@@@@@@@@@@@@@@@@`     @@@@@@@@@@@@@@@@@@@@@@@O`  ,O@@@@O     =@@@\n"
            "@@@@^     @@@@@@@@`  ..  .]/@@@@@@@@@@@/`    .]/@@@@/  ,@@@@@@@@@@@@@@@@@@@/      .@@@@@@@@@@@@@@@@@@@@@@@@@@@\.  \@@@^    .@@@\n"
            "@@@@.    =@@@@@@@[,.,@@@@@@@@@O[[..\^  .]]@@@@@@@@`  /@@@@@@@@@@@@@@@@@@/`       ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]  [@O     \@@\n"
            "@@@@.    O@@@@@@@@@@@@.         ,]@@@@@@@@@@@@@O. ,@@@@@@@@@@@@@@@@@@/         ,@@@@@@@@@@@\@@@@@@@@@@@@@@@@@@@@@@@`  \.    =@@\n"
            "@@@^    .@@@@@@@@@@@@@. ,@@@@@@@@@@@@@@@@@@@@`   /@@@@@@@@@@@@@@@[.          ,@@@@@@@@@@@@\.=@@@@@@@@@@@@@@@@@@@@@@@@O`.    .@@\n"
            "@@@^    ,@@@@@@@@@@@@@^   ,\@@@@@@@@@@@@@`  .  ]@@@@@@@@@@/[.....         ./@@@@@@@@@@@@@@^ =@@@@@@@@@@@@@@@@@@@@@@@@@^      =@\n"
            "@@@.    =@@@@@@@@@@@@@@@@^              ,/@^  /O                       ]@@@@@@@@@@@@@@@@@@/ @@@@@@@@@@@@@@@@@@@@@@@@@@@`     =@\n"
            "@@@.    =@/[@@@@@@@@@@@@@*           ,@@@@` ,@@@@@@\]]`         ..  /@@@@@@@@@@@/.O@@@@@@/ .@@@@@@@@@@@@@@.@@@@@@@@@@@@@     =@\n"
            "@@@.        .@@@@@@@@@@@@^          ,@@@/  /@@@@@@@@@@^ ,O`         ,@@@@@@@@@@O  @@@@@@@  =@@@@@@@@@@@@@@.\@@@@@@@@@@@@.    =@\n"
            "@@@.         .@@@@@@@@@@@@@]  .        .  /@@@@@@@@@@/      ]]@@@O` .@@@@@@@@@@^ =@@@@@/.  ,@@@@@@@@@@@@@@O.@@@@@@@@@@@@     =@\n"
            "@@@.         =@O[[[\@@@@@@@@@@\`         /@@@@@@@@@@@  /  ,@@@@@@@@  O@@@@@@@@@. @@@@@@`       \@@@@@@@@@@..@@@@@@@@@@@@     =@\n"
            "@@@^         .      .@@@@@@@@@@@@@@@@`  =@@@@@@@@@@@     ,@@@@@@@@@^  @@@@@@@@@  @@@@@` ,^  ,`   ,@@@@@@@@  @@@@@@@@@@@O    .@@\n"
            "@@@@^      .        O@@@@@@@@@@/[`     ,@@@@@@@@@@@/    ,@@@@@@@@@@@` .@@@@@@@@.,@@@/  /@@. .@@@.  ,@@@@@^ =@@@@@@@@@@@^  ]`O@@\n"
            "@@@@@.   =/          ,@@@@@^           @@@@@@@@@@@@`   .O/[     ,\@@@^  @@@@@@^ =@@`  /@@@@  =@@@@\ .@@@@^ =@@@@@@@@@@@. .[[@@@\n"
            "@@@@@`   .[`.      ./@@@@@@\          =@@@@@@@@@@@^                ,@@\  \@@@@. =[  /@@@@@@@  ,@@@@@@@@@@^.O@@@@@@@@@@^   ./@@@\n"
            "@@@@@^          .@@@@@@@@@@@.        .@@@@@@@@@@@/        ....       @@@  ,@@@.   ,@@@@@@@@@@   @@@@@@@@@. @@@@@@@@@@@`   =@@@@\n"
            "@@@@@^            \@@@@@@@@@@`.      =@@@@@^  @@O      /@@@@@@@@@`  ,@@@@\  ,@. ,@@@[.      ,\.  @@@@@@@^..@@@@@@@@@@^    .@@@@\n"
            "@@@@@@           =@@@@@@@@@@@.       @@@@@@. =@@`  ]O@@@@@@@@@@@@@@@@@@@@@@`    =@`               \@@@@@..=@@@@@@@@@@^    =@@@@\n"
            "@@@@@@^        .,@@@@@@@@@@@@@]O^    @@@@@O  /@@  =@`\@@[O@@@@@@@@@@@@@@@@@@@\` =@`  ]]@\`         ,@@@^ .@@@@@@@@@@`    ,@@@@@\n"
            "@@@@@@@^       .O@@@@@@@@@@@@@@O     @@@@@@  =@^  @^ =@` =@.,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]       ,/  =@@@@@@@@@@`    O@@@@@\n"
            "@@@@@@@@.     @@@@@@@@@@@@@@@@@      @@@@@@   @^  @  OO  @^ ,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`        @@@@@@@@@@@`   /@@@@@@\n"
            "@@@@@@@@\...   @@@@@@@@@@@@@@@       \@@@@@^   ^  @O@@@\@@\.@@@@@@@@@@@@@@@@@@@@@@@@@@^ =@/ =@@[@@      /@@@@@@@@@]*   =@@@@@@@\n"
            "@@@@@@@@@\      @@@@@@@@@@@@/        .@@@@@    .  @@@@@@@@@@@@@^         .[[@@@@@@@@@@  /@^ =@. @@@`   =@@@@@@@@/[`   =@@@@@@@@\n"
            "@@@@@@@@@@@      \@@@@@@@@@`          =@@@  ,@`    \@@@@@@@@@@@       ,]]       [O@@@@`,@@  @/ .@@@@  ,@@@@@@@@`     =@@@@@@@@@\n"
            "@@@@@@@@@@@@`     ,@@@@@@@\    ,].  .  =@. ,@@@@\]]/@@@@@@@@@@@    =@@@@@@@@@@\`   O@@@@@@@@@@]/@@@. .@@@@@@@O      =@@@@@@@@@@\n"
            "@@@@@@@@@@@@@\      @@@@@@@@@@@@`   @O  .  /@@@@@@@@@@@@@@@@@@@  .@@@@@@@@@@@@@@@. =@@@@@@@@@@@@@@` .@@@@`\@`     ,@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@O      ,@@@@@@@@@`   /@@@`   @@@@@@@@@@@@@@@@@@@@  O@@@@@@@@@@@@@@@^ =@@@@@@@@@@@@@` ,@@@^ ./      ,@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@^      ,@@@@@/     @@@@@^  @@@@@@@@@@@@@@@@@@@@  =@@@@@@@@@@@@@@@  ,@@@@@@@@@@@/. /@@`  *.     .O@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@O.      ,@@`  ]  /@@@@@@  ,@@@@@@@@@@@@@@@@@@@. =@@@@@@@@@@@@@@@  =@@@@@@@@@/   @/` ..       /@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@O         ,@`  @@@@@@@   =@@@@@@@@@@@@@@@@@@` .@@@@@@@@@@@@@@^  @@@@@@@O.  ..            /@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@O        `  =@@@@@@^    ,@@@@@@@@@@@@@@@@@O  \@@@@@@@@@@@@/  =@@@@`       ,/O.       /@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@`        ,@@@@@@^ @^   ,@@@@@@@@@@@@@@@@\  \@@@@@@@@@@/  ,@@@@@@@@@@@@@`       ./@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@\         [@@@  @@     ,\@@@@@@@@@@@@@@\  ,@@@@@@@@`  =@@@@@@@@@@O`        ,/@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@O`            @@        ,O@@@@@@@@@@@@@`    ,`.  .,@@@@@@@@O[.        ./@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@]                      ,@@@@@@@@@@@@@@@`.]]]@@@@@@@[`.         ,/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\.                    ,@@@@@@@@@@@@@@@@@@[[.            .]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O]`. ,O]`                                   ... ,/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^                            /O]@O]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\]`.                 .]]@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n"
            "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n";
}
